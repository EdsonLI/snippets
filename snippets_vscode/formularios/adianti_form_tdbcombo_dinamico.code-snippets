{
  "Preencimento dinâmico de TDBCombo Adianti": {
    "prefix": "adianti_form_tdbcombo_condicional",
    "body": [
      "class CidadeForm extends TPage {",
      "    protected $form;",
      "    private $formFields = [];",
      "    private static $database = 'exemplos';",
      "    private static $activeRecord = 'Cidade';",
      "    private static $primaryKey = 'id';",
      "    private static $formName = 'form_Cidade';",
      "",
      "    public function __construct($param) {",
      "        parent::__construct();",
      "",
      "        if (!empty($param['target_container'])) {",
      "            $this->adianti_target_container = $param['target_container'];",
      "        }",
      "",
      "        $this->form = new BootstrapFormBuilder(self::$formName);",
      "        $this->form->setFormTitle(\"Ação na saída do campo\");",
      "",
      "        $estado_pais_id = new TDBCombo('estado_pais_id', 'exemplos', 'Pais', 'id', '{nome}','nome asc');",
      "        $estado_id = new TCombo('estado_id');",
      "        $cidade_id = new TCombo('cidade_id');",
      "",
      "        $estado_pais_id->setChangeAction(new TAction([$this,'onChangeestado_pais_id']));",
      "        $estado_id->setChangeAction(new TAction([$this,'onChangeestado_id']));",
      "",
      "        $estado_id->addValidation(\"Estado id\", new TRequiredValidator());",
      "        $cidade_id->addValidation(\"Nome\", new TRequiredValidator());",
      "",
      "        $estado_id->setSize('70%');",
      "        $cidade_id->setSize('70%');",
      "        $estado_pais_id->setSize('70%');",
      "",
      "        $estado_id->enableSearch();",
      "        $cidade_id->enableSearch();",
      "        $estado_pais_id->enableSearch();",
      "",
      "        $this->form->addFields([new TLabel(\"País:\", '#ff0000', '14px', null)],[$estado_pais_id]);",
      "        $this->form->addFields([new TLabel(\"Estado:\", '#ff0000', '14px', null)],[$estado_id]);",
      "        $this->form->addFields([new TLabel(\"Cidade:\", '#ff0000', '14px', null)],[$cidade_id]);",
      "",
      "        $btn_onsave = $this->form->addAction(\"Salvar\", new TAction([$this, 'onSave']), 'far:save #ffffff');",
      "        $this->btn_onsave = $btn_onsave;",
      "        $btn_onsave->addStyleClass('btn-primary');",
      "",
      "        $btn_onclear = $this->form->addAction(\"Limpar formulário\", new TAction([$this, 'onClear']), 'fas:eraser #dd5a43');",
      "        $this->btn_onclear = $btn_onclear;",
      "",
      "        $container = new TVBox;",
      "        $container->style = 'width: 100%';",
      "        $container->class = 'form-container';",
      "",
      "        if (empty($param['target_container'])) {",
      "            $container->add(TBreadCrumb::create([\"Formulários\",\"Preencher campo na saída\"]));",
      "        }",
      "",
      "        $container->add($this->form);",
      "        parent::add($container);",
      "    }",
      "",
      "    public static function onChangeestado_pais_id($param) {",
      "        try {",
      "            if (isset($param['estado_pais_id']) && $param['estado_pais_id']) {",
      "                $criteria = TCriteria::create(['pais_id' => $param['estado_pais_id']]);",
      "                TDBCombo::reloadFromModel(self::$formName, 'estado_id', 'exemplos', 'Estado', 'id', '{nome}', 'nome asc', $criteria, TRUE);",
      "            } else {",
      "                TCombo::clearField(self::$formName, 'estado_id');",
      "            }",
      "        } catch (Exception $e) {",
      "            new TMessage('error', $e->getMessage());",
      "        }",
      "    }",
      "",
      "    public static function onChangeestado_id($param) {",
      "        try {",
      "            if (isset($param['estado_id']) && $param['estado_id']) {",
      "                $criteria = TCriteria::create(['estado_id' => $param['estado_id']]);",
      "                TDBCombo::reloadFromModel(self::$formName, 'cidade_id', 'exemplos', 'Cidade', 'id', '{nome}', 'nome asc', $criteria, TRUE);",
      "            } else {",
      "                TCombo::clearField(self::$formName, 'cidade_id');",
      "            }",
      "        } catch (Exception $e) {",
      "            new TMessage('error', $e->getMessage());",
      "        }",
      "    }",
      "",
      "    public function onSave($param = null) {",
      "        try {",
      "            new TMessage('info', 'Dados selecionados:<br>' . json_encode($param));",
      "            TScript::create(\"",
      "            setTimeout(function(){",
      "                $('.sweet-alert').find('p').css('word-wrap', 'break-word')",
      "            }, 400);",
      "            \");",
      "            return;",
      "",
      "            TTransaction::open(self::$database);",
      "            $this->form->validate();",
      "",
      "            $object = new Cidade();",
      "            $data = $this->form->getData();",
      "            $object->fromArray((array) $data);",
      "            $object->store();",
      "            $this->fireEvents($object);",
      "",
      "            $data->id = $object->id;",
      "            $this->form->setData($data);",
      "            TTransaction::close();",
      "",
      "            new TMessage('info', AdiantiCoreTranslator::translate('Record saved'));",
      "        } catch (Exception $e) {",
      "            new TMessage('error', $e->getMessage());",
      "            $this->form->setData($this->form->getData());",
      "            TTransaction::rollback();",
      "        }",
      "    }",
      "",
      "    public function onEdit($param) {",
      "        try {",
      "            if (isset($param['key'])) {",
      "                $key = $param['key'];",
      "                TTransaction::open(self::$database);",
      "                $object = new Cidade($key);",
      "                $object->estado_pais_id = $object->estado->pais->id;",
      "                $this->form->setData($object);",
      "                $this->fireEvents($object);",
      "                TTransaction::close();",
      "            } else {",
      "                $this->form->clear();",
      "            }",
      "        } catch (Exception $e) {",
      "            new TMessage('error', $e->getMessage());",
      "            TTransaction::rollback();",
      "        }",
      "    }",
      "",
      "    public function onClear($param) {",
      "        $this->form->clear(true);",
      "    }",
      "",
      "    public function onShow($param = null) {",
      "    }",
      "",
      "    public function fireEvents($object) {",
      "        $obj = new stdClass;",
      "        if (is_object($object) && get_class($object) == 'stdClass') {",
      "            if (isset($object->estado_pais_id)) { $obj->estado_pais_id = $object->estado_pais_id; }",
      "            if (isset($object->estado_id)) { $obj->estado_id = $object->estado_id; }",
      "            if (isset($object->cidade_id)) { $obj->cidade_id = $object->cidade_id; }",
      "        } elseif (is_object($object)) {",
      "            if (isset($object->estado->pais->id)) { $obj->estado_pais_id = $object->estado->pais->id; }",
      "            if (isset($object->estado_id)) { $obj->estado_id = $object->estado_id; }",
      "            if (isset($object->cidade_id)) { $obj->cidade_id = $object->cidade_id; }",
      "        }",
      "        TForm::sendData(self::$formName, $obj);",
      "    }",
      "}"
    ],
    "description": "Preencimento dinâmico de TDBCombo Adianti",
    "link": "https://www.madbuilder.com.br/exemplo-preencher-campo-na-saida"
  }
}
