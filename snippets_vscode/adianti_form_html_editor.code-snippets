{
  "Formulário com THtmlEditor Adianti": {
    "prefix": "adianti_form_html_editor",
    "body": [
      "class ${1:MensagemForm} extends TPage {",
      "    protected \\$form;",
      "    private \\$formFields = [];",
      "    private static \\$database = '${2:exemplos}';",
      "    private static \\$activeRecord = '${3:Mensagem}';",
      "    private static \\$primaryKey = '${4:id}';",
      "    private static \\$formName = '${5:list_Mensagem}';",
      "",
      "    public function __construct(\\$param) {",
      "        parent::__construct();",
      "        \\$this->form = new BootstrapFormBuilder(self::\\$formName);",
      "        \\$this->form->setFormTitle('HTML Editor');",
      "",
      "        \\$id = new TEntry('id');",
      "        \\$titulo = new TEntry('titulo');",
      "        \\$destinatario = new TEntry('destinatario');",
      "        \\$mensagem = new THtmlEditor('mensagem');",
      "",
      "        \\$titulo->addValidation('Título', new TRequiredValidator());",
      "",
      "        \\$id->setEditable(false);",
      "        \\$id->setSize(100);",
      "        \\$titulo->setSize('100%');",
      "        \\$destinatario->setSize('100%');",
      "        \\$mensagem->setSize('100%', 250);",
      "",
      "        \\$this->form->addFields([new TLabel('Id:')], [\\$id]);",
      "        \\$this->form->addFields([new TLabel('Título:', '#ff0000')], [\\$titulo], [new TLabel('Destinatário:')], [\\$destinatario]);",
      "        \\$this->form->addFields([new TLabel('Mensagem:')], [\\$mensagem]);",
      "",
      "        \\$btn_onsave = \\$this->form->addAction('Salvar', new TAction([\\$this, 'onSave']), 'fas:save #ffffff');",
      "        \\$btn_onsave->addStyleClass('btn-primary');",
      "",
      "        \\$this->form->addAction('Limpar formulário', new TAction([\\$this, 'onClear']), 'fa:eraser #dd5a43');",
      "",
      "        \\$container = new TVBox;",
      "        \\$container->style = 'width: 100%';",
      "        \\$container->class = 'form-container';",
      "        // \\$container->add(new TXMLBreadCrumb('menu.xml', __CLASS__));",
      "        \\$container->add(\\$this->form);",
      "",
      "        parent::add(\\$container);",
      "    }",
      "",
      "    public function onSave(\\$param = null) {",
      "        try {",
      "            TTransaction::open(self::\\$database);",
      "",
      "            \\$messageAction = null;",
      "",
      "            \\$this->form->validate();",
      "",
      "            \\$object = new ${3:Mensagem}();",
      "            \\$data = \\$this->form->getData();",
      "            \\$object->fromArray((array) \\$data);",
      "            \\$object->store();",
      "            \\$data->id = \\$object->id;",
      "            \\$this->form->setData(\\$data);",
      "",
      "            TTransaction::close();",
      "",
      "            new TMessage('info', AdiantiCoreTranslator::translate('Record saved'), \\$messageAction);",
      "        }",
      "        catch (Exception \\$e) {",
      "            new TMessage('error', \\$e->getMessage());",
      "            \\$this->form->setData(\\$this->form->getData());",
      "            TTransaction::rollback();",
      "        }",
      "    }",
      "",
      "    public function onClear(\\$param) {",
      "        \\$this->form->clear(true);",
      "    }",
      "",
      "    public function onEdit(\\$param) {",
      "        try {",
      "            if (isset(\\$param['key'])) {",
      "                \\$key = \\$param['key'];",
      "                TTransaction::open(self::\\$database);",
      "                \\$object = new ${3:Mensagem}(\\$key);",
      "                \\$this->form->setData(\\$object);",
      "                TTransaction::close();",
      "            }",
      "            else {",
      "                \\$this->form->clear();",
      "            }",
      "        }",
      "        catch (Exception \\$e) {",
      "            new TMessage('error', \\$e->getMessage());",
      "            TTransaction::rollback();",
      "        }",
      "    }",
      "",
      "    public function onShow() {",
      "    }",
      "}"
    ],
    "description": "Formulário com THtmlEditor Adianti"
  }
}